{
  "version": 4,
  "terraform_version": "1.11.2",
  "serial": 47,
  "lineage": "85970184-9b8e-df19-1295-8f15adaf021a",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "airflow",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "airflow",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "airflow",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.8.1",
                "chart": "airflow",
                "first_deployed": 1744888273,
                "last_deployed": 1744888273,
                "name": "airflow",
                "namespace": "airflow",
                "notes": "CHART NAME: postgresql\nCHART VERSION: 13.2.24\nAPP VERSION: 16.1.0\n\n** Please be patient while the chart is being deployed **\n\nPostgreSQL can be accessed via port 5432 on the following DNS names from within your cluster:\n\n    airflow-postgresql.airflow.svc.cluster.local - Read/Write connection\n\nTo get the password for \"postgres\" run:\n\n    export POSTGRES_PASSWORD=$(kubectl get secret --namespace airflow airflow-postgresql -o jsonpath=\"{.data.postgres-password}\" | base64 -d)\n\nTo connect to your database run the following command:\n\n    kubectl run airflow-postgresql-client --rm --tty -i --restart='Never' --namespace airflow --image docker.io/bitnami/postgresql:16.1.0-debian-11-r15 --env=\"PGPASSWORD=$POSTGRES_PASSWORD\" \\\n      --command -- psql --host airflow-postgresql -U postgres -d postgres -p 5432\n\n    \u003e NOTE: If you access the container using bash, make sure that you execute \"/opt/bitnami/scripts/postgresql/entrypoint.sh /bin/bash\" in order to avoid the error \"psql: local user with ID 1001} does not exist\"\n\nTo connect to your database from outside the cluster execute the following commands:\n\n    kubectl port-forward --namespace airflow svc/airflow-postgresql 5432:5432 \u0026\n    PGPASSWORD=\"$POSTGRES_PASSWORD\" psql --host 127.0.0.1 -U postgres -d postgres -p 5432\n\nWARNING: The configured password will be ignored on new installation in case when previous PostgreSQL release was deleted through the helm command. In that case, old PVC will have an old password, and setting it through helm won't take effect. Deleting persistent volumes (PVs) will solve the issue.\n\n\n\n\nThank you for installing Apache Airflow 2.8.1!\n\nYour release is named airflow.\nYou can now access your dashboard(s) by executing the following command(s) and visiting the corresponding port at localhost in your browser:\n\nAirflow Webserver:     kubectl port-forward svc/airflow-webserver 8080:8080 --namespace airflow\nDefault Webserver (Airflow UI) Login credentials:\n    username: admin\n    password: admin\nDefault Postgres connection credentials:\n    username: postgres\n    password: postgres\n    port: 5432\n\nYou can get Fernet Key value by running the following:\n\n    echo Fernet Key: $(kubectl get secret --namespace airflow airflow-fernet-key -o jsonpath=\"{.data.fernet-key}\" | base64 --decode)\n\n###########################################################\n#  WARNING: You should set a static webserver secret key  #\n###########################################################\n\nYou are using a dynamically generated webserver secret key, which can lead to\nunnecessary restarts of your Airflow components.\n\nInformation on how to set a static webserver secret key can be found here:\nhttps://airflow.apache.org/docs/helm-chart/stable/production-guide.html#webserver-secret-key\n",
                "revision": 1,
                "values": "{\"apiVersion\":\"argoproj.io/v1alpha1\",\"kind\":\"Application\",\"metadata\":{\"name\":\"airflow-root-app\",\"namespace\":\"argocd\"},\"spec\":{\"destination\":{\"server\":\"https://kubernetes.default.svc\"},\"project\":\"default\",\"source\":{\"path\":\"airflow-k8s\",\"repoURL\":\"https://github.com/xrayid/airflow-k8s.git\",\"targetRevision\":\"HEAD\"}}}",
                "version": "1.12.0"
              }
            ],
            "name": "airflow",
            "namespace": "airflow",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://airflow.apache.org",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "failed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: airflow-root-app\n  namespace: argocd\nspec:\n  project: default\n  source:\n    repoURL: https://github.com/xrayid/airflow-k8s.git\n    targetRevision: HEAD\n    path: airflow-k8s\n  destination:\n    server: https://kubernetes.default.svc"
            ],
            "verify": false,
            "version": "1.12.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "scaleway_k8s_cluster.main",
            "scaleway_k8s_pool.airflow_dbt",
            "scaleway_vpc_private_network.private_net"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.9.3",
                "chart": "argo-cd",
                "first_deployed": 1744888274,
                "last_deployed": 1744888274,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "\n\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 1,
                "values": "{\"server\":{\"ingress\":{\"enabled\":false},\"service\":{\"type\":\"LoadBalancer\"}}}",
                "version": "5.51.6"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "server:\n  service:\n    type: LoadBalancer\n  ingress:\n    enabled: false\n"
            ],
            "verify": false,
            "version": "5.51.6",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "scaleway_k8s_cluster.main",
            "scaleway_k8s_pool.airflow_dbt",
            "scaleway_vpc_private_network.private_net"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "scaleway_k8s_cluster",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/scaleway/scaleway\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "admission_plugins": [],
            "apiserver_cert_sans": [],
            "apiserver_url": "https://01be0e19-5949-4f80-ac54-6c62ac0004b7.api.k8s.fr-par.scw.cloud:6443",
            "auto_upgrade": [
              {
                "enable": false,
                "maintenance_window_day": "any",
                "maintenance_window_start_hour": 0
              }
            ],
            "autoscaler_config": [
              {
                "balance_similar_node_groups": false,
                "disable_scale_down": false,
                "estimator": "binpacking",
                "expander": "random",
                "expendable_pods_priority_cutoff": 0,
                "ignore_daemonsets_utilization": false,
                "max_graceful_termination_sec": 0,
                "scale_down_delay_after_add": "10m",
                "scale_down_unneeded_time": "10m",
                "scale_down_utilization_threshold": 0.5
              }
            ],
            "cni": "cilium",
            "created_at": "2025-04-17T11:03:06Z",
            "delete_additional_resources": true,
            "description": "",
            "feature_gates": [],
            "id": "fr-par/01be0e19-5949-4f80-ac54-6c62ac0004b7",
            "kubeconfig": [
              {
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJMU1EUXhOakV4TURNd04xb1hEVE0xTURReE5qRXhNRE13TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFpFClhZcGZhdk43dElqRHY1aUdzMFdEeEREUTlGa3pNYnp2NUVnZDJXQ25HN1pUU2x5MDgwVmlwWWJCTGtQZWF3eTUKOURsSEZIME1uQW5FRHNyQTA0VjJsdndOYUxkZmFwZXR6RzJFZXlsTCt4MlZVQ0tkT2JxTm5xbGFseEhXKzlpKwp5ZU1zR1lhVktKcWkweGxHaHA1UVlFeGRlRzFKWWNVV0RvRHllYnBtQ051VVlXdDFHREFVYXJvYWhMRXVIZUdFClJVaTlzZmQvdGhHU0I2azVpSkQrUHdncDV4QUcva3ZyM1ZibnpPd0ZDMmNyTjZEa0MyY0w3K0wxcDJkeEdIc0YKZi9HMHpTTzUwR0svOEFvQ05XbzZkTzY2SXpMMVdCRlBWZnd5WU5oRnhya3dENUVmM3YzWm94M2MvNlFLdk43eApyeEUzWFVVaDMzV0dJZjlCUXAwQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJcm9MRzJ1eEc1SlBxY1ZxTFhQeGVxakp0aUxNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBdFoxMDJ3VEZJSURreXlCcnFiUVpsdFFKQTVhREFCclFlL3RsdzB3U0FiemxLWU44QgpEcEVFRHVJN1V5T3NOanFUMUpqRkFNWjMwQU5xL254Z3lDbmlFeDlsOWFvSFBBMjJUL20xbktDcnhmQk1UeXIrCjdGeER6czltb1JEVmpYb0l4a2JHNXBYUTZUV0EvZkxJWjZJVU9zYkF3Y1RoYzBaMmt3dVJEb01uc242WFJIVDYKTVpIL1plSTRzdGhVdDRNU2hibnRqdU5RdFR5N000LzVyUjlPdHhqWlBsVWVLcjhmbFR4L1FGMmtoWXZYRElwdQpRN2k4TmVZY2hZSGpTWXI2UmY5OUdlckVocEdZSnR5c2g3RjZCL3J0RzRGbVk4OUcwNmFRL2E5UFJUeUVYU09ICmVkODdNdjNiUTFybC9XNlVaSlQyZjhlUzJ5em1MUkhNY0lZUAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "config_file": "apiVersion: v1\nclusters:\n- name: \"kapsule-dataflow\"\n  cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJMU1EUXhOakV4TURNd04xb1hEVE0xTURReE5qRXhNRE13TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFpFClhZcGZhdk43dElqRHY1aUdzMFdEeEREUTlGa3pNYnp2NUVnZDJXQ25HN1pUU2x5MDgwVmlwWWJCTGtQZWF3eTUKOURsSEZIME1uQW5FRHNyQTA0VjJsdndOYUxkZmFwZXR6RzJFZXlsTCt4MlZVQ0tkT2JxTm5xbGFseEhXKzlpKwp5ZU1zR1lhVktKcWkweGxHaHA1UVlFeGRlRzFKWWNVV0RvRHllYnBtQ051VVlXdDFHREFVYXJvYWhMRXVIZUdFClJVaTlzZmQvdGhHU0I2azVpSkQrUHdncDV4QUcva3ZyM1ZibnpPd0ZDMmNyTjZEa0MyY0w3K0wxcDJkeEdIc0YKZi9HMHpTTzUwR0svOEFvQ05XbzZkTzY2SXpMMVdCRlBWZnd5WU5oRnhya3dENUVmM3YzWm94M2MvNlFLdk43eApyeEUzWFVVaDMzV0dJZjlCUXAwQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJcm9MRzJ1eEc1SlBxY1ZxTFhQeGVxakp0aUxNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBdFoxMDJ3VEZJSURreXlCcnFiUVpsdFFKQTVhREFCclFlL3RsdzB3U0FiemxLWU44QgpEcEVFRHVJN1V5T3NOanFUMUpqRkFNWjMwQU5xL254Z3lDbmlFeDlsOWFvSFBBMjJUL20xbktDcnhmQk1UeXIrCjdGeER6czltb1JEVmpYb0l4a2JHNXBYUTZUV0EvZkxJWjZJVU9zYkF3Y1RoYzBaMmt3dVJEb01uc242WFJIVDYKTVpIL1plSTRzdGhVdDRNU2hibnRqdU5RdFR5N000LzVyUjlPdHhqWlBsVWVLcjhmbFR4L1FGMmtoWXZYRElwdQpRN2k4TmVZY2hZSGpTWXI2UmY5OUdlckVocEdZSnR5c2g3RjZCL3J0RzRGbVk4OUcwNmFRL2E5UFJUeUVYU09ICmVkODdNdjNiUTFybC9XNlVaSlQyZjhlUzJ5em1MUkhNY0lZUAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://01be0e19-5949-4f80-ac54-6c62ac0004b7.api.k8s.fr-par.scw.cloud:6443\ncontexts:\n- name: admin@kapsule-dataflow\n  context:\n    cluster: \"kapsule-dataflow\"\n    user: kapsule-dataflow-admin\ncurrent-context: admin@kapsule-dataflow\nkind: Config\npreferences: {}\nusers:\n- name: kapsule-dataflow-admin\n  user:\n    token: cNbHSXcyIuurf7mbjQwPBXmdgZD1jhnYd7PDp9j20DdtounbMOSpLVDH",
                "host": "https://01be0e19-5949-4f80-ac54-6c62ac0004b7.api.k8s.fr-par.scw.cloud:6443",
                "token": "cNbHSXcyIuurf7mbjQwPBXmdgZD1jhnYd7PDp9j20DdtounbMOSpLVDH"
              }
            ],
            "name": "kapsule-dataflow",
            "open_id_connect_config": [
              {
                "client_id": "",
                "groups_claim": [],
                "groups_prefix": "",
                "issuer_url": "",
                "required_claim": [],
                "username_claim": "",
                "username_prefix": ""
              }
            ],
            "organization_id": "e97e853d-3cce-4ebf-acda-ec5d6abc8fa8",
            "private_network_id": "ec324971-54c0-4b27-adbf-1a69e9f8a4b9",
            "project_id": "8cfcea18-2aa9-4eb4-8754-4e32a034abec",
            "region": "fr-par",
            "status": "ready",
            "tags": [
              "secure",
              "dataflow"
            ],
            "timeouts": null,
            "type": "kapsule",
            "updated_at": "2025-04-17T11:04:36Z",
            "upgrade_available": true,
            "version": "1.28.2",
            "wildcard_dns": "*.01be0e19-5949-4f80-ac54-6c62ac0004b7.nodes.k8s.fr-par.scw.cloud"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "kubeconfig"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlZmF1bHQiOjkwMDAwMDAwMDAwMCwiZGVsZXRlIjo5MDAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjo5MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "scaleway_vpc_private_network.private_net"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "scaleway_k8s_pool",
      "name": "airflow_dbt",
      "provider": "provider[\"registry.terraform.io/scaleway/scaleway\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "autohealing": false,
            "autoscaling": true,
            "cluster_id": "fr-par/01be0e19-5949-4f80-ac54-6c62ac0004b7",
            "container_runtime": "containerd",
            "created_at": "2025-04-17T11:03:11Z",
            "current_size": 1,
            "id": "fr-par/d3314ef3-5c03-439b-93f3-54ef0d94b643",
            "kubelet_args": {},
            "max_size": 3,
            "min_size": 1,
            "name": "airflow-dbt-pool",
            "node_type": "pro2_m",
            "nodes": [
              {
                "name": "scw-kapsule-dataflow-airflow-dbt-pool-4c6542f1",
                "public_ip": "51.15.230.176",
                "public_ip_v6": "",
                "status": "ready"
              }
            ],
            "placement_group_id": null,
            "public_ip_disabled": false,
            "region": "fr-par",
            "root_volume_size_in_gb": 20,
            "root_volume_type": "sbs_5k",
            "size": 1,
            "status": "ready",
            "tags": [
              "airflow",
              "dbt"
            ],
            "timeouts": null,
            "updated_at": "2025-04-17T11:09:31Z",
            "upgrade_policy": [
              {
                "max_surge": 0,
                "max_unavailable": 1
              }
            ],
            "version": "1.28.2",
            "wait_for_pool_ready": true,
            "zone": "fr-par-1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWZhdWx0IjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "scaleway_k8s_cluster.main",
            "scaleway_vpc_private_network.private_net"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "scaleway_vpc_private_network",
      "name": "private_net",
      "provider": "provider[\"registry.terraform.io/scaleway/scaleway\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "created_at": "2025-04-17T11:03:04Z",
            "id": "fr-par/ec324971-54c0-4b27-adbf-1a69e9f8a4b9",
            "ipv4_subnet": [
              {
                "address": "172.16.4.0",
                "created_at": "2025-04-17T11:03:04Z",
                "id": "e1f8c6d6-b6d4-462c-8618-9658471e8dde",
                "prefix_length": 22,
                "subnet": "172.16.4.0/22",
                "subnet_mask": "255.255.252.0",
                "updated_at": "2025-04-17T11:03:04Z"
              }
            ],
            "ipv6_subnets": [
              {
                "address": "fd2e:f6cf:538e:f425::",
                "created_at": "2025-04-17T11:03:04Z",
                "id": "85ddb311-5d18-4d2e-8fe0-84ef53c265b0",
                "prefix_length": 64,
                "subnet": "fd2e:f6cf:538e:f425::/64",
                "subnet_mask": "255.255.255.255.255.255.255.255.0.0.0.0.0.0.0.0",
                "updated_at": "2025-04-17T11:03:04Z"
              }
            ],
            "is_regional": true,
            "name": "kapsule-private-net",
            "organization_id": "e97e853d-3cce-4ebf-acda-ec5d6abc8fa8",
            "project_id": "8cfcea18-2aa9-4eb4-8754-4e32a034abec",
            "region": "fr-par",
            "tags": [],
            "updated_at": "2025-04-17T11:03:04Z",
            "vpc_id": "fr-par/fc0a0adb-3f44-492d-ba76-40bcc8820334",
            "zone": "fr-par-1"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
